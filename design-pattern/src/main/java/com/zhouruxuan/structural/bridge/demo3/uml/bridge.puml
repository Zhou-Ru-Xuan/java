@startuml
class com.zhouruxuan.structural.bridge.demo3.SoulEatingEnchantment {
+ void onActivate()
+ void apply()
+ void onDeactivate()
}
class com.zhouruxuan.structural.bridge.demo3.Sword {
- Enchantment enchantment
+ void wield()
+ void swing()
+ void unwield()
+ Enchantment getEnchantment()
}
class com.zhouruxuan.structural.bridge.demo3.Hammer {
- Enchantment enchantment
+ void wield()
+ void swing()
+ void unwield()
+ Enchantment getEnchantment()
}
interface com.zhouruxuan.structural.bridge.demo3.Enchantment {
~ void onActivate()
~ void apply()
~ void onDeactivate()
}
class com.zhouruxuan.structural.bridge.demo3.FlyingEnchantment {
+ void onActivate()
+ void apply()
+ void onDeactivate()
}
class com.zhouruxuan.structural.bridge.demo3.App {
+ {static} void main(String[])
}
interface com.zhouruxuan.structural.bridge.demo3.Weapon {
~ void wield()
~ void swing()
~ void unwield()
~ Enchantment getEnchantment()
}


com.zhouruxuan.structural.bridge.demo3.Enchantment <|.. com.zhouruxuan.structural.bridge.demo3.SoulEatingEnchantment : 实现
com.zhouruxuan.structural.bridge.demo3.Weapon <|.. com.zhouruxuan.structural.bridge.demo3.Sword : 实现
com.zhouruxuan.structural.bridge.demo3.Weapon <|.. com.zhouruxuan.structural.bridge.demo3.Hammer : 实现
com.zhouruxuan.structural.bridge.demo3.Enchantment <|.. com.zhouruxuan.structural.bridge.demo3.FlyingEnchantment : 实现
com.zhouruxuan.structural.bridge.demo3.Sword --> "1" com.zhouruxuan.structural.bridge.demo3.Enchantment : 依赖
com.zhouruxuan.structural.bridge.demo3.Hammer --> "1" com.zhouruxuan.structural.bridge.demo3.Enchantment : 依赖

@enduml